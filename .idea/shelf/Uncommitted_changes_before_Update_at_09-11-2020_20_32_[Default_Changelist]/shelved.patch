Index: app/src/main/java/com/brainwellnessspa/DashboardModule/Audio/Adapters/RecentlyPlayedAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.brainwellnessspa.DashboardModule.Audio.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.brainwellnessspa.DashboardModule.Activities.PlayWellnessActivity;\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.brainwellnessspa.BWSApplication;\r\nimport com.brainwellnessspa.BillingOrderModule.Activities.MembershipChangeActivity;\r\nimport com.brainwellnessspa.DashboardModule.Models.AddToQueueModel;\r\nimport com.brainwellnessspa.DashboardModule.Models.MainAudioModel;\r\nimport com.brainwellnessspa.DashboardModule.TransparentPlayer.Fragments.TransparentPlayerFragment;\r\nimport com.brainwellnessspa.R;\r\nimport com.brainwellnessspa.Utility.CONSTANTS;\r\nimport com.brainwellnessspa.Utility.MeasureRatio;\r\nimport com.brainwellnessspa.Utility.MusicService;\r\nimport com.brainwellnessspa.databinding.SmallBoxLayoutBinding;\r\n\r\nimport java.lang.reflect.Type;\r\nimport java.util.ArrayList;\r\n\r\nimport static android.content.Context.MODE_PRIVATE;\r\nimport static com.brainwellnessspa.DashboardModule.Activities.DashboardActivity.player;\r\nimport static com.brainwellnessspa.DashboardModule.Playlist.MyPlaylistsFragment.disclaimerPlayed;\r\nimport static com.brainwellnessspa.DashboardModule.TransparentPlayer.Fragments.TransparentPlayerFragment.isDisclaimer;\r\nimport static com.brainwellnessspa.Utility.MusicService.isCompleteStop;\r\nimport static com.brainwellnessspa.Utility.MusicService.isMediaStart;\r\nimport static com.brainwellnessspa.Utility.MusicService.isPause;\r\nimport static com.brainwellnessspa.Utility.MusicService.isPrepare;\r\n\r\n\r\npublic class RecentlyPlayedAdapter extends RecyclerView.Adapter<RecentlyPlayedAdapter.MyViewHolder> {\r\n    Context ctx;\r\n    FragmentActivity activity;\r\n    String IsLock;\r\n    private ArrayList<MainAudioModel.ResponseData.Detail> listModelList;\r\n    String HomeView;\r\n\r\n    public RecentlyPlayedAdapter(ArrayList<MainAudioModel.ResponseData.Detail> listModelList, Context ctx, FragmentActivity activity,\r\n                                  String IsLock,String HomeView) {\r\n        this.listModelList = listModelList;\r\n        this.ctx = ctx;\r\n        this.activity = activity;\r\n        this.IsLock = IsLock;\r\n        this.HomeView = HomeView;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        SmallBoxLayoutBinding v = DataBindingUtil.inflate(LayoutInflater.from(parent.getContext())\r\n                , R.layout.small_box_layout, parent, false);\r\n        return new MyViewHolder(v);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {\r\n        holder.binding.tvTitle.setText(listModelList.get(position).getName());\r\n        MeasureRatio measureRatio = BWSApplication.measureRatio(ctx, 16,\r\n                1, 1, 0.28f, 10);\r\n        holder.binding.ivRestaurantImage.getLayoutParams().height = (int) (measureRatio.getHeight() * measureRatio.getRatio());\r\n        holder.binding.ivRestaurantImage.getLayoutParams().width = (int) (measureRatio.getWidthImg() * measureRatio.getRatio());\r\n        holder.binding.ivRestaurantImage.setScaleType(ImageView.ScaleType.FIT_XY);\r\n        Glide.with(ctx).load(listModelList.get(position).getImageFile()).thumbnail(0.05f)\r\n                .diskCacheStrategy(DiskCacheStrategy.ALL).skipMemoryCache(false).into(holder.binding.ivRestaurantImage);\r\n\r\n        if (IsLock.equalsIgnoreCase(\"1\")) {\r\n            if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"1\")) {\r\n                holder.binding.ivLock.setVisibility(View.GONE);\r\n            } else if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"0\")\r\n                    || listModelList.get(position).getIsPlay().equalsIgnoreCase(\"\")) {\r\n                holder.binding.ivLock.setVisibility(View.VISIBLE);\r\n            }\r\n        } else if (IsLock.equalsIgnoreCase(\"2\")) {\r\n            if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"1\")) {\r\n                holder.binding.ivLock.setVisibility(View.GONE);\r\n            } else if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"0\")\r\n                    || listModelList.get(position).getIsPlay().equalsIgnoreCase(\"\")) {\r\n                holder.binding.ivLock.setVisibility(View.VISIBLE);\r\n            }\r\n        } else if (IsLock.equalsIgnoreCase(\"0\") || IsLock.equalsIgnoreCase(\"\")) {\r\n            holder.binding.ivLock.setVisibility(View.GONE);\r\n        }\r\n\r\n        holder.binding.llMainLayout.setOnClickListener(view -> {\r\n//       TODO                 Active and cancelled = 0, InActive = 1, Suspeded = 2\r\n            SharedPreferences shared1 = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n            boolean queuePlay = shared1.getBoolean(CONSTANTS.PREF_KEY_queuePlay, false);\r\n            if (queuePlay) {\r\n                int position1 = shared1.getInt(CONSTANTS.PREF_KEY_position, 0);\r\n                ArrayList<AddToQueueModel> addToQueueModelList = new ArrayList<>();\r\n                Gson gson = new Gson();\r\n                String json1 = shared1.getString(CONSTANTS.PREF_KEY_queueList, String.valueOf(gson));\r\n                if (!json1.equalsIgnoreCase(String.valueOf(gson))) {\r\n                    Type type1 = new TypeToken<ArrayList<AddToQueueModel>>() {\r\n                    }.getType();\r\n                    addToQueueModelList = gson.fromJson(json1, type1);\r\n                }\r\n                addToQueueModelList.remove(position1);\r\n                SharedPreferences shared2 = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n                SharedPreferences.Editor editor = shared2.edit();\r\n                String json = gson.toJson(addToQueueModelList);\r\n                editor.putString(CONSTANTS.PREF_KEY_queueList, json);\r\n                editor.commit();\r\n            }\r\n            if (IsLock.equalsIgnoreCase(\"1\")) {\r\n                if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"1\")) {\r\n                    holder.binding.ivLock.setVisibility(View.GONE);\r\n\r\n                    callnewTrans(position);\r\n\r\n                } else if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"0\")\r\n                        || listModelList.get(position).getIsPlay().equalsIgnoreCase(\"\")) {\r\n                    holder.binding.ivLock.setVisibility(View.VISIBLE);\r\n                    Intent i = new Intent(ctx, MembershipChangeActivity.class);\r\n                    i.putExtra(\"ComeFrom\", \"Plan\");\r\n                    ctx.startActivity(i);\r\n                }\r\n            } else if (IsLock.equalsIgnoreCase(\"2\")) {\r\n                if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"1\")) {\r\n                    holder.binding.ivLock.setVisibility(View.GONE);\r\n                    callnewTrans(position);\r\n                } else if (listModelList.get(position).getIsPlay().equalsIgnoreCase(\"0\")\r\n                        || listModelList.get(position).getIsPlay().equalsIgnoreCase(\"\")) {\r\n                    holder.binding.ivLock.setVisibility(View.VISIBLE);\r\n                    BWSApplication.showToast(\"Please re-activate your membership plan\", ctx);\r\n                }\r\n            } else if (IsLock.equalsIgnoreCase(\"0\") || IsLock.equalsIgnoreCase(\"\")) {\r\n                holder.binding.ivLock.setVisibility(View.GONE);\r\n                    callnewTrans(position);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void callnewTrans(int position) {\r\n\r\n        SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, MODE_PRIVATE);\r\n        boolean audioPlay = shared.getBoolean(CONSTANTS.PREF_KEY_audioPlay, true);\r\n        String AudioFlag = shared.getString(CONSTANTS.PREF_KEY_AudioFlag, \"0\");\r\n        String MyPlaylist = shared.getString(CONSTANTS.PREF_KEY_myPlaylist, \"\");\r\n        if (audioPlay && AudioFlag.equalsIgnoreCase(\"MainAudioList\")&& MyPlaylist.equalsIgnoreCase(HomeView)) {\r\n            if (isDisclaimer == 1) {\r\n                BWSApplication.showToast(\"The audio shall start playing after the disclaimer\", ctx);\r\n            } else {\r\n                callTransFrag(position, listModelList);\r\n            }\r\n        } else {\r\n            isDisclaimer = 0;\r\n            disclaimerPlayed = 0;\r\n            ArrayList<MainAudioModel.ResponseData.Detail> listModelList2 = new ArrayList<>();\r\n            MainAudioModel.ResponseData.Detail mainPlayModel = new MainAudioModel.ResponseData.Detail();\r\n            mainPlayModel.setID(\"0\");\r\n            mainPlayModel.setName(\"Disclaimer\");\r\n            mainPlayModel.setAudioFile(\"\");\r\n            mainPlayModel.setAudioDirection(\"The audio shall start playing after the disclaimer\");\r\n            mainPlayModel.setAudiomastercat(\"\");\r\n            mainPlayModel.setAudioSubCategory(\"\");\r\n            mainPlayModel.setImageFile(\"\");\r\n            mainPlayModel.setLike(\"\");\r\n            mainPlayModel.setDownload(\"\");\r\n            mainPlayModel.setAudioDuration(\"0:48\");\r\n            listModelList2.addAll(listModelList);\r\n            listModelList2.add(position, mainPlayModel);\r\n            callTransFrag(position, listModelList2);\r\n        }\r\n    }\r\n\r\n    private void callTransFrag(int position,ArrayList<MainAudioModel.ResponseData.Detail> listModelList) {\r\n        try {\r\n            player = 1;\r\n            if (isPrepare || isMediaStart || isPause) {\r\n                MusicService.stopMedia();\r\n            }\r\n            isPause = false;\r\n            isMediaStart = false;\r\n            isPrepare = false;\r\n            isCompleteStop = false;\r\n            /*Fragment fragment = new TransparentPlayerFragment();\r\n            FragmentManager fragmentManager1 = activity.getSupportFragmentManager();\r\n            fragmentManager1.beginTransaction()\r\n                    .add(R.id.flContainer, fragment)\r\n                    .commit();*/\r\n            SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = shared.edit();\r\n            Gson gson = new Gson();\r\n\r\n            String json = gson.toJson(listModelList);\r\n            editor.putString(CONSTANTS.PREF_KEY_modelList, json);\r\n            editor.putInt(CONSTANTS.PREF_KEY_position, position);\r\n            editor.putBoolean(CONSTANTS.PREF_KEY_queuePlay, false);\r\n            editor.putBoolean(CONSTANTS.PREF_KEY_audioPlay, true);\r\n            editor.putString(CONSTANTS.PREF_KEY_PlaylistId, \"\");\r\n            editor.putString(CONSTANTS.PREF_KEY_myPlaylist, HomeView);\r\n            editor.putString(CONSTANTS.PREF_KEY_AudioFlag, \"MainAudioList\");\r\n            editor.commit();\r\n            Intent i = new Intent(ctx, PlayWellnessActivity.class);\r\n            i.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n            ctx.startActivity(i);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        if (6 > listModelList.size()) {\r\n            return listModelList.size();\r\n        } else {\r\n            return 6;\r\n        }\r\n    }\r\n\r\n    public class MyViewHolder extends RecyclerView.ViewHolder {\r\n        SmallBoxLayoutBinding binding;\r\n\r\n        public MyViewHolder(SmallBoxLayoutBinding binding) {\r\n            super(binding.getRoot());\r\n            this.binding = binding;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/brainwellnessspa/DashboardModule/Audio/Adapters/RecentlyPlayedAdapter.java	(revision 3ce1f00bcc7d0fe8ab86bb9acd3aed1edbbfdd9b)
+++ app/src/main/java/com/brainwellnessspa/DashboardModule/Audio/Adapters/RecentlyPlayedAdapter.java	(date 1604933770231)
@@ -15,6 +15,7 @@
 import androidx.fragment.app.FragmentManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.brainwellnessspa.DashboardModule.Activities.AddPlaylistActivity;
 import com.brainwellnessspa.DashboardModule.Activities.PlayWellnessActivity;
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.load.engine.DiskCacheStrategy;
@@ -52,7 +53,7 @@
     String HomeView;
 
     public RecentlyPlayedAdapter(ArrayList<MainAudioModel.ResponseData.Detail> listModelList, Context ctx, FragmentActivity activity,
-                                  String IsLock,String HomeView) {
+                                 String IsLock, String HomeView) {
         this.listModelList = listModelList;
         this.ctx = ctx;
         this.activity = activity;
@@ -78,7 +79,6 @@
         holder.binding.ivRestaurantImage.setScaleType(ImageView.ScaleType.FIT_XY);
         Glide.with(ctx).load(listModelList.get(position).getImageFile()).thumbnail(0.05f)
                 .diskCacheStrategy(DiskCacheStrategy.ALL).skipMemoryCache(false).into(holder.binding.ivRestaurantImage);
-
         if (IsLock.equalsIgnoreCase("1")) {
             if (listModelList.get(position).getIsPlay().equalsIgnoreCase("1")) {
                 holder.binding.ivLock.setVisibility(View.GONE);
@@ -97,6 +97,18 @@
             holder.binding.ivLock.setVisibility(View.GONE);
         }
 
+//        holder.binding.tvAddToPlaylist.setVisibility(View.GONE);
+        holder.binding.llMainLayout.setOnLongClickListener(new View.OnLongClickListener() {
+            @Override
+            public boolean onLongClick(View v) {
+//                holder.binding.tvAddToPlaylist.setVisibility(View.GONE);
+                Intent i = new Intent(ctx, AddPlaylistActivity.class);
+                i.putExtra("AudioId", listModelList.get(position).getID());
+                i.putExtra("PlaylistID", "");
+                ctx.startActivity(i);
+                return false;
+            }
+        });
         holder.binding.llMainLayout.setOnClickListener(view -> {
 //       TODO                 Active and cancelled = 0, InActive = 1, Suspeded = 2
             SharedPreferences shared1 = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);
@@ -142,18 +154,17 @@
                 }
             } else if (IsLock.equalsIgnoreCase("0") || IsLock.equalsIgnoreCase("")) {
                 holder.binding.ivLock.setVisibility(View.GONE);
-                    callnewTrans(position);
+                callnewTrans(position);
             }
         });
     }
 
     private void callnewTrans(int position) {
-
         SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, MODE_PRIVATE);
         boolean audioPlay = shared.getBoolean(CONSTANTS.PREF_KEY_audioPlay, true);
         String AudioFlag = shared.getString(CONSTANTS.PREF_KEY_AudioFlag, "0");
         String MyPlaylist = shared.getString(CONSTANTS.PREF_KEY_myPlaylist, "");
-        if (audioPlay && AudioFlag.equalsIgnoreCase("MainAudioList")&& MyPlaylist.equalsIgnoreCase(HomeView)) {
+        if (audioPlay && AudioFlag.equalsIgnoreCase("MainAudioList") && MyPlaylist.equalsIgnoreCase(HomeView)) {
             if (isDisclaimer == 1) {
                 BWSApplication.showToast("The audio shall start playing after the disclaimer", ctx);
             } else {
@@ -180,7 +191,7 @@
         }
     }
 
-    private void callTransFrag(int position,ArrayList<MainAudioModel.ResponseData.Detail> listModelList) {
+    private void callTransFrag(int position, ArrayList<MainAudioModel.ResponseData.Detail> listModelList) {
         try {
             player = 1;
             if (isPrepare || isMediaStart || isPause) {
Index: app/src/main/res/layout/small_box_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/llMainLayout\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:orientation=\"vertical\"\r\n                android:paddingTop=\"@dimen/_4sdp\"\r\n                android:paddingLeft=\"@dimen/_8sdp\"\r\n                android:paddingRight=\"@dimen/_8sdp\"\r\n                android:weightSum=\"1\">\r\n\r\n                <androidx.cardview.widget.CardView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    app:cardCornerRadius=\"@dimen/_10sdp\">\r\n\r\n                    <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:id=\"@+id/title_layout\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\">\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/ivRestaurantImage\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:scaleType=\"fitXY\"\r\n                            app:layout_constraintDimensionRatio=\"1:1\"\r\n                            app:layout_constraintLeft_toLeftOf=\"parent\"\r\n                            app:layout_constraintRight_toRightOf=\"parent\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\" />\r\n                    </androidx.constraintlayout.widget.ConstraintLayout>\r\n                </androidx.cardview.widget.CardView>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"bottom\"\r\n                    android:gravity=\"bottom\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:paddingHorizontal=\"@dimen/_2sdp\"\r\n                    android:paddingTop=\"@dimen/_2sdp\"\r\n                    android:weightSum=\"1\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tvTitle\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:ellipsize=\"end\"\r\n                        android:fontFamily=\"@font/montserrat_semi_bold\"\r\n                        android:maxLines=\"1\"\r\n                        android:textColor=\"@color/black\"\r\n                        android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n            <ImageView\r\n                android:id=\"@+id/ivLock\"\r\n                android:layout_width=\"@dimen/_24sdp\"\r\n                android:layout_height=\"@dimen/_24sdp\"\r\n                android:layout_marginLeft=\"@dimen/_15sdp\"\r\n                android:layout_marginTop=\"@dimen/_12sdp\"\r\n                android:src=\"@drawable/ic_lock_icon\"\r\n                android:visibility=\"gone\" />\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/small_box_layout.xml	(revision 3ce1f00bcc7d0fe8ab86bb9acd3aed1edbbfdd9b)
+++ app/src/main/res/layout/small_box_layout.xml	(date 1604929436804)
@@ -15,8 +15,8 @@
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
                 android:orientation="vertical"
-                android:paddingTop="@dimen/_4sdp"
                 android:paddingLeft="@dimen/_8sdp"
+                android:paddingTop="@dimen/_4sdp"
                 android:paddingRight="@dimen/_8sdp"
                 android:weightSum="1">
 
@@ -73,6 +73,13 @@
                 android:layout_marginTop="@dimen/_12sdp"
                 android:src="@drawable/ic_lock_icon"
                 android:visibility="gone" />
+
+          <!--  <TextView
+                android:id="@+id/tvAddToPlaylist"
+                android:layout_width="match_parent"
+                android:layout_height="@dimen/_40sdp"
+                android:layout_alignParentBottom="true"
+                android:background="@drawable/bottom_add_sheet"/>-->
         </RelativeLayout>
     </LinearLayout>
 </layout>
\ No newline at end of file
Index: app/src/main/res/drawable/bottom_add_sheet.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/bottom_add_sheet.xml	(date 1604928805399)
+++ app/src/main/res/drawable/bottom_add_sheet.xml	(date 1604928805399)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <gradient
+        android:type="linear"
+        android:startColor="#9F2A3042"
+        android:centerColor="#9F2A3042"
+        android:endColor="#9F2A3042"
+        android:angle="90"/>
+
+    <corners
+        android:bottomLeftRadius="@dimen/_0sdp"
+        android:bottomRightRadius="@dimen/_0sdp"/>
+</shape>
\ No newline at end of file
