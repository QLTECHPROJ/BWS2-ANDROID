Index: app/src/main/java/com/brainwellnessspa/DashboardModule/Activities/DashboardActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.brainwellnessspa.DashboardModule.Activities;\r\n\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.navigation.NavController;\r\nimport androidx.navigation.Navigation;\r\nimport androidx.navigation.ui.AppBarConfiguration;\r\nimport androidx.navigation.ui.NavigationUI;\r\n\r\nimport com.brainwellnessspa.BWSApplication;\r\nimport com.brainwellnessspa.DashboardModule.Playlist.MyPlaylistsFragment;\r\nimport com.brainwellnessspa.R;\r\nimport com.brainwellnessspa.databinding.ActivityDashboardBinding;\r\n\r\nimport static com.brainwellnessspa.InvoiceModule.Activities.InvoiceActivity.invoiceToDashboard;\r\nimport static com.brainwellnessspa.Utility.MusicService.isMediaStart;\r\nimport static com.brainwellnessspa.Utility.MusicService.releasePlayer;\r\nimport static com.brainwellnessspa.Utility.MusicService.stopMedia;\r\n\r\npublic class DashboardActivity extends AppCompatActivity {\r\n    public static int player = 0;\r\n    ActivityDashboardBinding binding;\r\n    boolean doubleBackToExitPressedOnce = false;\r\n    public static int ComeNotification = 0;\r\n    String Goplaylist= \"\", PlaylistID = \"\",PlaylistName = \"\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_dashboard);\r\n        AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(\r\n                R.id.navigation_audio, R.id.navigation_playlist, R.id.navigation_search,\r\n                R.id.navigation_appointment, R.id.navigation_account).build();\r\n        NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);\r\n//        NavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);\r\n        NavigationUI.setupWithNavController(binding.navView, navController);\r\n        if (getIntent().getExtras() != null){\r\n            Goplaylist = getIntent().getStringExtra(\"Goplaylist\");\r\n           /* PlaylistID = getIntent().getStringExtra(\"PlaylistID\");\r\n            PlaylistName = getIntent().getStringExtra(\"PlaylistName\");*/\r\n        }\r\n        if(ComeNotification == 1){\r\n            binding.navView.setSelectedItemId(R.id.navigation_playlist);\r\n        }else{\r\n            if (binding.navView.getSelectedItemId() == R.id.navigation_audio) {\r\n                binding.navView.setSelectedItemId(R.id.navigation_audio);\r\n            }\r\n        }\r\n\r\n        if (Goplaylist.equalsIgnoreCase(\"1\")){\r\n            binding.navView.setSelectedItemId(R.id.navigation_playlist);\r\n            Fragment myPlaylistsFragment = new MyPlaylistsFragment();\r\n            Bundle bundle = new Bundle();\r\n            bundle.putString(\"New\", \"0\");\r\n            /*bundle.putString(\"PlaylistID\", PlaylistID);\r\n            bundle.putString(\"PlaylistName\", PlaylistName);*/\r\n            bundle.putString(\"MyDownloads\", \"0\");\r\n            myPlaylistsFragment.setArguments(bundle);\r\n            FragmentManager fragmentManager1 = getSupportFragmentManager();\r\n            fragmentManager1.beginTransaction()\r\n                    .replace(R.id.flContainer, myPlaylistsFragment)\r\n                    .commit();\r\n        }\r\n//\r\n//        ConnectivityManager connMgr = (ConnectivityManager)\r\n//                getSystemService(Context.CONNECTIVITY_SERVICE);\r\n//// Checks if the device is on a metered network\r\n//        if (connMgr.isActiveNetworkMetered()) {\r\n//            // Checks userâ€™s Data Saver settings.\r\n//            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n//                switch (connMgr.getRestrictBackgroundStatus()) {\r\n//                    case ConnectivityManager.RESTRICT_BACKGROUND_STATUS_ENABLED:\r\n//                        // Background data usage is blocked for this app. Wherever possible,\r\n//                        // the app should also use less data in the foreground.\r\n//\r\n//                    case ConnectivityManager.RESTRICT_BACKGROUND_STATUS_WHITELISTED:\r\n//                        // The app is allowed to bypass Data Saver. Nevertheless, wherever possible,\r\n//                        // the app should use less data in the foreground and background.\r\n//\r\n//                    case ConnectivityManager.RESTRICT_BACKGROUND_STATUS_DISABLED:\r\n//                        // Data Saver is disabled. Since the device is connected to a\r\n//                        // metered network, the app should use less data wherever possible.\r\n//                }\r\n//            }\r\n//        } else {\r\n//            // The device is not on a metered network.\r\n//            // Use data as required to perform syncs, downloads, and updates.\r\n//        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (invoiceToDashboard == 1) {\r\n            finishAffinity();\r\n            /*if (doubleBackToExitPressedOnce) {\r\n                super.onBackPressed();\r\n                return;\r\n            }\r\n\r\n            this.doubleBackToExitPressedOnce = true;\r\n            BWSApplication.showToast(\"Press again to exit.\", DashboardActivity.this);\r\n\r\n            new Handler().postDelayed(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    doubleBackToExitPressedOnce = false;\r\n                }\r\n            }, 2000);*/\r\n        }\r\n\r\n        if (binding.navView.getSelectedItemId() == R.id.navigation_audio) {\r\n            binding.navView.setSelectedItemId(R.id.navigation_audio);\r\n            if (doubleBackToExitPressedOnce) {\r\n                super.onBackPressed();\r\n                return;\r\n            }\r\n\r\n            this.doubleBackToExitPressedOnce = true;\r\n            BWSApplication.showToast(\"Press again to exit\", DashboardActivity.this);\r\n\r\n            new Handler().postDelayed(() -> doubleBackToExitPressedOnce = false, 2000);\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n       /* if(isMediaStart){\r\n            stopMedia();\r\n            releasePlayer();\r\n        }*/\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/brainwellnessspa/DashboardModule/Activities/DashboardActivity.java	(revision 60140036902bc3282b4bca96f023cff1a649e91d)
+++ app/src/main/java/com/brainwellnessspa/DashboardModule/Activities/DashboardActivity.java	(date 1603435729688)
@@ -27,7 +27,7 @@
     ActivityDashboardBinding binding;
     boolean doubleBackToExitPressedOnce = false;
     public static int ComeNotification = 0;
-    String Goplaylist= "", PlaylistID = "",PlaylistName = "";
+    String Goplaylist = "", PlaylistID = "", PlaylistName = "";
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -39,20 +39,20 @@
         NavController navController = Navigation.findNavController(this, R.id.nav_host_fragment);
 //        NavigationUI.setupActionBarWithNavController(this, navController, appBarConfiguration);
         NavigationUI.setupWithNavController(binding.navView, navController);
-        if (getIntent().getExtras() != null){
+        if (getIntent().getExtras() != null) {
             Goplaylist = getIntent().getStringExtra("Goplaylist");
            /* PlaylistID = getIntent().getStringExtra("PlaylistID");
             PlaylistName = getIntent().getStringExtra("PlaylistName");*/
         }
-        if(ComeNotification == 1){
+        if (ComeNotification == 1) {
             binding.navView.setSelectedItemId(R.id.navigation_playlist);
-        }else{
+        } else {
             if (binding.navView.getSelectedItemId() == R.id.navigation_audio) {
                 binding.navView.setSelectedItemId(R.id.navigation_audio);
             }
         }
 
-        if (Goplaylist.equalsIgnoreCase("1")){
+        if (Goplaylist.equalsIgnoreCase("1")) {
             binding.navView.setSelectedItemId(R.id.navigation_playlist);
             Fragment myPlaylistsFragment = new MyPlaylistsFragment();
             Bundle bundle = new Bundle();
