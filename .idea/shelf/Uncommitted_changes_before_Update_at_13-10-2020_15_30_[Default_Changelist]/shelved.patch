Index: app/src/main/java/com/brainwellnessspa/DashboardModule/Activities/ViewQueueActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.brainwellnessspa.DashboardModule.Activities;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.media.AudioAttributes;\r\nimport android.media.MediaPlayer;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.SystemClock;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.SeekBar;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\nimport com.brainwellnessspa.BWSApplication;\r\nimport com.brainwellnessspa.DashboardModule.Models.AddToQueueModel;\r\nimport com.brainwellnessspa.DashboardModule.Models.SucessModel;\r\nimport com.brainwellnessspa.DashboardModule.TransparentPlayer.Models.MainPlayModel;\r\nimport com.brainwellnessspa.EncryptDecryptUtils.DownloadMedia;\r\nimport com.brainwellnessspa.EncryptDecryptUtils.FileUtils;\r\nimport com.brainwellnessspa.R;\r\nimport com.brainwellnessspa.RoomDataBase.DatabaseClient;\r\nimport com.brainwellnessspa.RoomDataBase.DownloadAudioDetails;\r\nimport com.brainwellnessspa.Utility.APIClient;\r\nimport com.brainwellnessspa.Utility.CONSTANTS;\r\nimport com.brainwellnessspa.Utility.ItemMoveCallback;\r\nimport com.brainwellnessspa.Utility.MeasureRatio;\r\nimport com.brainwellnessspa.Utility.StartDragListener;\r\nimport com.brainwellnessspa.databinding.ActivityViewQueueBinding;\r\nimport com.brainwellnessspa.databinding.QueueListLayoutBinding;\r\n\r\nimport java.io.FileDescriptor;\r\nimport java.io.IOException;\r\nimport java.lang.reflect.Type;\r\nimport java.sql.Time;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\nimport static com.brainwellnessspa.Utility.MusicService.SeekTo;\r\nimport static com.brainwellnessspa.Utility.MusicService.getEndTime;\r\nimport static com.brainwellnessspa.Utility.MusicService.getProgressPercentage;\r\nimport static com.brainwellnessspa.Utility.MusicService.getStartTime;\r\nimport static com.brainwellnessspa.Utility.MusicService.isMediaStart;\r\nimport static com.brainwellnessspa.Utility.MusicService.isPause;\r\nimport static com.brainwellnessspa.Utility.MusicService.isPlaying;\r\nimport static com.brainwellnessspa.Utility.MusicService.isPrepare;\r\nimport static com.brainwellnessspa.Utility.MusicService.isStop;\r\nimport static com.brainwellnessspa.Utility.MusicService.mediaPlayer;\r\nimport static com.brainwellnessspa.Utility.MusicService.oTime;\r\nimport static com.brainwellnessspa.Utility.MusicService.pauseMedia;\r\nimport static com.brainwellnessspa.Utility.MusicService.progressToTimer;\r\nimport static com.brainwellnessspa.Utility.MusicService.resumeMedia;\r\nimport static com.brainwellnessspa.Utility.MusicService.savePrefQueue;\r\nimport static com.brainwellnessspa.Utility.MusicService.stopMedia;\r\n\r\npublic class ViewQueueActivity extends AppCompatActivity implements SeekBar.OnSeekBarChangeListener,/* AudioManager.OnAudioFocusChangeListener,*/ StartDragListener {\r\n    ActivityViewQueueBinding binding;\r\n    int position, listSize, startTime = 0;\r\n    String IsRepeat, IsShuffle, id, AudioId = \"\", ComeFromQueue = \"\", play = \"\", url, name;\r\n    Context ctx;\r\n    Activity activity;\r\n    ArrayList<MainPlayModel> mainPlayModelList;\r\n    ArrayList<AddToQueueModel> addToQueueModelList, addToQueueModelList2;\r\n    ArrayList<AddToQueueModel> addToQueueModeNowPlaying;\r\n    SharedPreferences shared;\r\n    Boolean queuePlay, audioPlay;\r\n    QueueAdapter adapter;\r\n    List<DownloadAudioDetails> downloadAudioDetailsList;\r\n    ItemTouchHelper touchHelper;\r\n    int mypos = 0;\r\n    long totalDuration;\r\n    private long mLastClickTime = 0;\r\n    private Handler handler;\r\n    //    private AudioManager mAudioManager;\r\n    private Runnable UpdateSongTime = new Runnable() {\r\n        @Override\r\n        public void run() {\r\n            startTime = getStartTime();\r\n            Time t = Time.valueOf(\"00:00:00\");\r\n            if (queuePlay) {\r\n                if (listSize != 0) {\r\n                    if (!BWSApplication.isNetworkConnected(ctx)) {\r\n                        if (mediaPlayer != null) {\r\n                            totalDuration = mediaPlayer.getDuration();\r\n                        } else {\r\n                            t = Time.valueOf(\"00:\" + downloadAudioDetailsList.get(0).getAudioDuration());\r\n                        }\r\n                    } else {\r\n                        if (mediaPlayer != null) {\r\n                            totalDuration = mediaPlayer.getDuration();\r\n                        } else {\r\n                            t = Time.valueOf(\"00:\" + addToQueueModelList.get(position).getAudioDuration());\r\n                        }\r\n                    }\r\n                } else {\r\n                    stopMedia();\r\n                }\r\n            } else if (audioPlay) {\r\n                if (!BWSApplication.isNetworkConnected(ctx)) {\r\n                    if (mediaPlayer != null) {\r\n                        totalDuration = mediaPlayer.getDuration();\r\n                    } else {\r\n                        t = Time.valueOf(\"00:\" + downloadAudioDetailsList.get(0).getAudioDuration());\r\n                    }\r\n                } else {\r\n                    if (mediaPlayer != null) {\r\n                        totalDuration = mediaPlayer.getDuration();\r\n                    } else {\r\n                        t = Time.valueOf(\"00:\" + mainPlayModelList.get(position).getAudioDuration());\r\n                    }\r\n                }\r\n            }\r\n            if (!BWSApplication.isNetworkConnected(ctx)) {\r\n                totalDuration = mediaPlayer.getDuration();\r\n            } else {\r\n                if (mediaPlayer != null) {\r\n                    totalDuration = mediaPlayer.getDuration();\r\n                } else {\r\n                    totalDuration = t.getTime();\r\n                }\r\n            }\r\n            long currentDuration = getStartTime();\r\n\r\n            int progress = getProgressPercentage(currentDuration, totalDuration);\r\n            long diff = totalDuration - currentDuration;\r\n\r\n            if (currentDuration == totalDuration && currentDuration != 0&& !isStop) {\r\n                callComplete();\r\n            } else if (isPause) {\r\n                binding.simpleSeekbar.setProgress(oTime);\r\n            } else {\r\n                binding.simpleSeekbar.setProgress(progress);\r\n            }\r\n            binding.simpleSeekbar.setMax(100);\r\n            handler.postDelayed(this, 500);\r\n        }\r\n    };\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_view_queue);\r\n        ctx = ViewQueueActivity.this;\r\n        activity = ViewQueueActivity.this;\r\n\r\n        downloadAudioDetailsList = new ArrayList<>();\r\n        if (getIntent().getExtras() != null) {\r\n            AudioId = getIntent().getStringExtra(CONSTANTS.ID);\r\n        }\r\n\r\n        if (getIntent().getExtras() != null) {\r\n            ComeFromQueue = getIntent().getStringExtra(\"ComeFromQueue\");\r\n        }\r\n        if (getIntent().getExtras() != null) {\r\n            play = getIntent().getStringExtra(\"play\");\r\n        }\r\n        handler = new Handler();\r\n        addToQueueModelList = new ArrayList<>();\r\n        addToQueueModelList2 = new ArrayList<>();\r\n\r\n        mainPlayModelList = new ArrayList<>();\r\n        shared = getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = shared.getString(CONSTANTS.PREF_KEY_queueList, String.valueOf(gson));\r\n        position = shared.getInt(CONSTANTS.PREF_KEY_position, 0);\r\n\r\n        if (!json.equalsIgnoreCase(String.valueOf(gson))) {\r\n            Type type = new TypeToken<ArrayList<AddToQueueModel>>() {\r\n            }.getType();\r\n            addToQueueModelList = gson.fromJson(json, type);\r\n            addToQueueModelList2 = gson.fromJson(json, type);\r\n        }\r\n        String json2 = shared.getString(CONSTANTS.PREF_KEY_audioList, String.valueOf(gson));\r\n        position = shared.getInt(CONSTANTS.PREF_KEY_position, 0);\r\n        Type type2 = new TypeToken<ArrayList<MainPlayModel>>() {\r\n        }.getType();\r\n        mainPlayModelList = gson.fromJson(json2, type2);\r\n        SharedPreferences Status = getSharedPreferences(CONSTANTS.PREF_KEY_Status, Context.MODE_PRIVATE);\r\n        IsRepeat = Status.getString(CONSTANTS.PREF_KEY_IsRepeat, \"\");\r\n        IsShuffle = Status.getString(CONSTANTS.PREF_KEY_IsShuffle, \"\");\r\n/*        mAudioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE);\r\n        mAudioManager.requestAudioFocus(this, AudioManager.STREAM_MUSIC,\r\n                AudioManager.AUDIOFOCUS_GAIN);*/\r\n        binding.rvQueueList.setFocusable(false);\r\n        binding.nestedScroll.requestFocus();\r\n\r\n        queuePlay = shared.getBoolean(CONSTANTS.PREF_KEY_queuePlay, false);\r\n        audioPlay = shared.getBoolean(CONSTANTS.PREF_KEY_audioPlay, true);\r\n\r\n        binding.llBack.setOnClickListener(view -> {\r\n            if (SystemClock.elapsedRealtime() - mLastClickTime < 1000) {\r\n                return;\r\n            }\r\n            mLastClickTime = SystemClock.elapsedRealtime();\r\n            callBack();\r\n        });\r\n        MeasureRatio measureRatio = BWSApplication.measureRatio(ctx, 0,\r\n                1, 1, 0.14f, 0);\r\n        binding.ivRestaurantImage.getLayoutParams().height = (int) (measureRatio.getHeight() * measureRatio.getRatio());\r\n        binding.ivRestaurantImage.getLayoutParams().width = (int) (measureRatio.getWidthImg() * measureRatio.getRatio());\r\n        binding.ivRestaurantImage.setScaleType(ImageView.ScaleType.FIT_XY);\r\n        getPrepareShowData(position);\r\n        binding.simpleSeekbar.setOnSeekBarChangeListener(this);\r\n        callAdapterMethod();\r\n        binding.llNowPlaying.setOnClickListener(view -> {\r\n            if (binding.llPause.getVisibility() == View.VISIBLE) {\r\n                isPause = false;\r\n            }\r\n            SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = shared.edit();\r\n            Gson gson2 = new Gson();\r\n            String json22 = gson2.toJson(addToQueueModelList);\r\n            editor.putString(CONSTANTS.PREF_KEY_queueList, json22);\r\n            editor.putInt(CONSTANTS.PREF_KEY_position, position);\r\n            editor.commit();\r\n            Intent i = new Intent(ctx, PlayWellnessActivity.class);\r\n            i.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n            startActivity(i);\r\n            finish();\r\n        });\r\n\r\n        binding.llPause.setOnClickListener(view -> {\r\n            handler.removeCallbacks(UpdateSongTime);\r\n            binding.simpleSeekbar.setProgress(binding.simpleSeekbar.getProgress());\r\n            pauseMedia();\r\n            binding.llPlay.setVisibility(View.VISIBLE);\r\n            binding.llPause.setVisibility(View.GONE);\r\n            binding.llProgressBar.setVisibility(View.GONE);\r\n            binding.progressBar.setVisibility(View.GONE);\r\n            oTime = binding.simpleSeekbar.getProgress();\r\n        });\r\n\r\n        binding.llPlay.setOnClickListener(view -> {\r\n            binding.llPlay.setVisibility(View.GONE);\r\n            binding.llPause.setVisibility(View.VISIBLE);\r\n            binding.llProgressBar.setVisibility(View.GONE);\r\n            binding.progressBar.setVisibility(View.GONE);\r\n            resumeMedia();\r\n            isPause = false;\r\n            handler.postDelayed(UpdateSongTime, 500);\r\n        });\r\n\r\n        binding.llnext.setOnClickListener(view -> {\r\n\r\n            if (BWSApplication.isNetworkConnected(ctx)) {\r\n                stopMedia();\r\n                isMediaStart = false;\r\n                isPrepare = false;\r\n                isPause = false;\r\n                if (IsRepeat.equalsIgnoreCase(\"1\")||IsRepeat.equalsIgnoreCase(\"0\")) {\r\n                    // repeat is on play same song again\r\n                    if (position < listSize - 1) {\r\n                        position = position + 1;\r\n                    } else {\r\n                        position = 0;\r\n                    }\r\n                    getPrepareShowData(position);\r\n                } /*else if (IsRepeat.equalsIgnoreCase(\"0\")) {\r\n                    getPrepareShowData(position);\r\n                } */else if (IsShuffle.equalsIgnoreCase(\"1\")) {\r\n                    // shuffle is on - play a random song\r\n                    if (queuePlay) {\r\n                        adapter.callRemoveList(position);\r\n                        listSize = addToQueueModelList.size();\r\n                        if (listSize == 0) {\r\n                            stopMedia();\r\n                        } else if (listSize == 1) {\r\n                            stopMedia();\r\n                        } else {\r\n                            Random random = new Random();\r\n                            position = random.nextInt((listSize - 1) - 0 + 1) + 0;\r\n                            getPrepareShowData(position);\r\n                        }\r\n                    } else {\r\n                        Random random = new Random();\r\n                        position = random.nextInt((listSize - 1) - 0 + 1) + 0;\r\n                        getPrepareShowData(position);\r\n                    }\r\n                } else {\r\n                    if (queuePlay) {\r\n                        adapter.callRemoveList(position);\r\n                        listSize = addToQueueModelList.size();\r\n                        if (position < listSize - 1) {\r\n                            getPrepareShowData(position);\r\n                        } else {\r\n                            if (listSize == 0) {\r\n                                savePrefQueue(0, false, true, addToQueueModelList, ctx);\r\n                                stopMedia();\r\n                            } else {\r\n                                position = 0;\r\n                                getPrepareShowData(position);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (position < listSize - 1) {\r\n                            position = position + 1;\r\n                            getPrepareShowData(position);\r\n                        } else if (listSize != 1) {\r\n                            position = 0;\r\n                            getPrepareShowData(position);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                BWSApplication.showToast(getString(R.string.no_server_found), ctx);\r\n            }\r\n        });\r\n\r\n        binding.llprev.setOnClickListener(view -> {\r\n            if (BWSApplication.isNetworkConnected(ctx)) {\r\n                stopMedia();\r\n                isMediaStart = false;\r\n                isPrepare = false;\r\n                isPause = false;\r\n                if (IsRepeat.equalsIgnoreCase(\"1\") || IsRepeat.equalsIgnoreCase(\"0\")) {\r\n                    // repeat is on play same song again\r\n                    if (position > 0) {\r\n                        position = position - 1;\r\n                        getPrepareShowData(position);\r\n                    } else if (listSize != 1) {\r\n                        position = listSize - 1;\r\n                        getPrepareShowData(position);\r\n                    }\r\n                }/* else if (IsRepeat.equalsIgnoreCase(\"0\")) {\r\n                    getPrepareShowData(position);\r\n                } */else if (IsShuffle.equalsIgnoreCase(\"1\")) {\r\n                    // shuffle is on - play a random song\r\n                    if (queuePlay) {\r\n                        adapter.callRemoveList(position);\r\n                        listSize = addToQueueModelList.size();\r\n                        if (listSize == 0) {\r\n                            stopMedia();\r\n                        } else if (listSize == 1) {\r\n                            stopMedia();\r\n                        } else {\r\n                            Random random = new Random();\r\n                            position = random.nextInt((listSize - 1) - 0 + 1) + 0;\r\n                            getPrepareShowData(position);\r\n                        }\r\n                    } else {\r\n                        Random random = new Random();\r\n                        position = random.nextInt((listSize - 1) - 0 + 1) + 0;\r\n                        getPrepareShowData(position);\r\n                    }\r\n                } else {\r\n                    if (queuePlay) {\r\n                        adapter.callRemoveList(position);\r\n                        listSize = addToQueueModelList.size();\r\n                        if (position > 0) {\r\n                            getPrepareShowData(position - 1);\r\n                        } else {\r\n                            if (listSize == 0) {\r\n                                savePrefQueue(0, false, true, addToQueueModelList, ctx);\r\n                                stopMedia();\r\n                            } else {\r\n                                position = 0;\r\n                                getPrepareShowData(position);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (position > 0) {\r\n                            position = position - 1;\r\n\r\n                            getPrepareShowData(position);\r\n                        } else if (listSize != 1) {\r\n                            position = listSize - 1;\r\n                            getPrepareShowData(position);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                BWSApplication.showToast(getString(R.string.no_server_found), ctx);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void callAdapterMethod() {\r\n        if (addToQueueModelList.size() != 0) {\r\n            if (queuePlay) {\r\n                if (addToQueueModelList.get(position).getName().equalsIgnoreCase(binding.tvName.getText().toString())) {\r\n                    mypos = position;\r\n                    addToQueueModelList2.remove(position);\r\n                }\r\n            }\r\n            adapter = new QueueAdapter(addToQueueModelList2, ctx, this);\r\n            RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(ctx);\r\n            binding.rvQueueList.setLayoutManager(mLayoutManager);\r\n            binding.rvQueueList.setItemAnimator(new DefaultItemAnimator());\r\n            ItemTouchHelper.Callback callback =\r\n                    new ItemMoveCallback(adapter);\r\n            touchHelper = new ItemTouchHelper(callback);\r\n            touchHelper.attachToRecyclerView(binding.rvQueueList);\r\n            binding.rvQueueList.setAdapter(adapter);\r\n        }\r\n    }\r\n\r\n    public void GetMedia(String url, Context ctx, String PlaylistId) {\r\n\r\n        downloadAudioDetailsList = new ArrayList<>();\r\n        class GetMedia extends AsyncTask<Void, Void, Void> {\r\n\r\n            @Override\r\n            protected Void doInBackground(Void... voids) {\r\n\r\n                downloadAudioDetailsList = DatabaseClient\r\n                        .getInstance(ctx)\r\n                        .getaudioDatabase()\r\n                        .taskDao()\r\n                        .getaudioByPlaylist(url, PlaylistId);\r\n                return null;\r\n            }\r\n\r\n            @Override\r\n            protected void onPostExecute(Void aVoid) {\r\n                if (isPause) {\r\n                    binding.llPlay.setVisibility(View.VISIBLE);\r\n                    binding.llPause.setVisibility(View.GONE);\r\n                    binding.llProgressBar.setVisibility(View.GONE);\r\n                    binding.progressBar.setVisibility(View.GONE);\r\n                    binding.simpleSeekbar.setProgress(oTime);\r\n//                    resumeMedia();\r\n                } else if ((isMediaStart || isPlaying()) && !isPause) {\r\n                    binding.llPause.setVisibility(View.VISIBLE);\r\n                    binding.llPlay.setVisibility(View.GONE);\r\n                    binding.llProgressBar.setVisibility(View.GONE);\r\n                    binding.progressBar.setVisibility(View.GONE);\r\n                } else {\r\n                    callMedia();\r\n                }\r\n                super.onPostExecute(aVoid);\r\n\r\n            }\r\n        }\r\n\r\n        GetMedia st = new GetMedia();\r\n        st.execute();\r\n    }\r\n\r\n    private void getPrepareShowData(int position) {\r\n        queuePlay = shared.getBoolean(CONSTANTS.PREF_KEY_queuePlay, false);\r\n        audioPlay = shared.getBoolean(CONSTANTS.PREF_KEY_audioPlay, true);\r\n        if (audioPlay) {\r\n            listSize = mainPlayModelList.size();\r\n        } else if (queuePlay) {\r\n            listSize = addToQueueModelList.size();\r\n        }\r\n\r\n        if (listSize == 1) {\r\n            binding.llnext.setEnabled(false);\r\n            binding.llnext.setEnabled(false);\r\n            binding.llprev.setClickable(false);\r\n            binding.llprev.setClickable(false);\r\n            binding.ivnext.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            binding.ivprev.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            position = 0;\r\n        }/* else if (position == listSize - 1 && IsRepeat.equalsIgnoreCase(\"1\")) {\r\n            binding.llnext.setEnabled(false);\r\n            binding.llnext.setClickable(false);\r\n            binding.ivnext.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n        } else if (position == 0 && IsRepeat.equalsIgnoreCase(\"1\")) {\r\n            binding.llprev.setEnabled(false);\r\n            binding.llprev.setClickable(false);\r\n            binding.ivprev.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n        } */ else {\r\n            binding.llnext.setEnabled(true);\r\n            binding.llnext.setEnabled(true);\r\n            binding.llprev.setClickable(true);\r\n            binding.llprev.setClickable(true);\r\n            binding.ivnext.setColorFilter(ContextCompat.getColor(ctx, R.color.white), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            binding.ivprev.setColorFilter(ContextCompat.getColor(ctx, R.color.white), android.graphics.PorterDuff.Mode.SRC_IN);\r\n        }\r\n        BWSApplication.showProgressBar(binding.pbProgressBar, binding.progressBarHolder, activity);\r\n        if (audioPlay) {\r\n            id = mainPlayModelList.get(position).getID();\r\n            url = mainPlayModelList.get(position).getAudioFile();\r\n            name = mainPlayModelList.get(position).getName();\r\n            setInIt(mainPlayModelList.get(position).getName(), mainPlayModelList.get(position).getAudiomastercat(),\r\n                    mainPlayModelList.get(position).getImageFile(), mainPlayModelList.get(position).getAudioDuration());\r\n            GetMedia(url, ctx, mainPlayModelList.get(position).getPlaylistID());\r\n        } else if (queuePlay) {\r\n            if (listSize == 1) {\r\n                position = 0;\r\n            }\r\n            id = addToQueueModelList.get(position).getID();\r\n            url = addToQueueModelList.get(position).getAudioFile();\r\n            name = addToQueueModelList.get(position).getName();\r\n            setInIt(addToQueueModelList.get(position).getName(), addToQueueModelList.get(position).getAudiomastercat(),\r\n                    addToQueueModelList.get(position).getImageFile(), addToQueueModelList.get(position).getAudioDuration());\r\n            GetMedia(url, ctx, addToQueueModelList.get(position).getPlaylistID());\r\n            SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = shared.edit();\r\n            Gson gson2 = new Gson();\r\n            String json3 = gson2.toJson(addToQueueModelList);\r\n            editor.putString(CONSTANTS.PREF_KEY_queueList, json3);\r\n            editor.commit();\r\n            startTime = getStartTime();\r\n        }\r\n        addToRecentPlay();\r\n        binding.simpleSeekbar.setClickable(true);\r\n        handler.postDelayed(UpdateSongTime, 500);\r\n        if (isMediaStart) {\r\n            mediaPlayer.setOnCompletionListener(mediaPlayer -> {\r\n                callComplete();\r\n            });\r\n        }\r\n        SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = shared.edit();\r\n        editor.putInt(CONSTANTS.PREF_KEY_position, position);\r\n        editor.commit();\r\n        BWSApplication.hideProgressBar(binding.pbProgressBar, binding.progressBarHolder, activity);\r\n    }\r\n\r\n    private void setMediaPlayer(String download, FileDescriptor fileDescriptor) {\r\n        if (null == mediaPlayer) {\r\n            mediaPlayer = new MediaPlayer();\r\n            Log.e(\"Playinggggg\", \"Playinggggg\");\r\n        }\r\n        try {\r\n            if (mediaPlayer == null)\r\n                mediaPlayer = new MediaPlayer();\r\n            if (mediaPlayer.isPlaying()) {\r\n                Log.e(\"Playinggggg\", \"stoppppp\");\r\n                mediaPlayer.stop();\r\n                isMediaStart = false;\r\n                isPrepare = false;\r\n            }\r\n            mediaPlayer = new MediaPlayer();\r\n            if (download.equalsIgnoreCase(\"1\")) {\r\n                mediaPlayer.setDataSource(fileDescriptor);\r\n            } else {\r\n                mediaPlayer.setDataSource(url);\r\n            }\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                mediaPlayer.setAudioAttributes(\r\n                        new AudioAttributes\r\n                                .Builder()\r\n                                .setContentType(AudioAttributes.CONTENT_TYPE_MUSIC)\r\n                                .build());\r\n            }\r\n            mediaPlayer.prepareAsync();\r\n            isPrepare = true;\r\n        } catch (IllegalStateException | IOException e) {\r\n            FileDescriptor fileDescriptor1 = null;\r\n            setMediaPlayer(\"0\", fileDescriptor1);\r\n            e.printStackTrace();\r\n        }\r\n        if (!mediaPlayer.isPlaying()) {\r\n            mediaPlayer.setOnPreparedListener(mp -> {\r\n                Log.e(\"Playinggggg\", \"Startinggg\");\r\n                mediaPlayer.start();\r\n                isMediaStart = true;\r\n                binding.llProgressBar.setVisibility(View.GONE);\r\n                binding.progressBar.setVisibility(View.GONE);\r\n                binding.llPlay.setVisibility(View.GONE);\r\n                binding.llPause.setVisibility(View.VISIBLE);\r\n            });\r\n        }\r\n    }\r\n\r\n    private void callMedia() {\r\n        FileDescriptor fileDescriptor = null;\r\n        if (downloadAudioDetailsList.size() != 0) {\r\n            binding.llProgressBar.setVisibility(View.VISIBLE);\r\n            binding.progressBar.setVisibility(View.VISIBLE);\r\n            binding.llPlay.setVisibility(View.GONE);\r\n            binding.llPause.setVisibility(View.GONE);\r\n            DownloadMedia downloadMedia = new DownloadMedia(getApplicationContext());\r\n\r\n            try {\r\n                byte[] decrypt = null;\r\n                decrypt = downloadMedia.decrypt(name);\r\n                if (decrypt != null) {\r\n                    binding.llProgressBar.setVisibility(View.GONE);\r\n                    binding.progressBar.setVisibility(View.GONE);\r\n                    binding.llPause.setVisibility(View.VISIBLE);\r\n                    binding.llPlay.setVisibility(View.GONE);\r\n                    fileDescriptor = FileUtils.getTempFileDescriptor(getApplicationContext(), decrypt);\r\n                    setMediaPlayer(\"1\", fileDescriptor);\r\n                } else {\r\n                    if (BWSApplication.isNetworkConnected(ctx)) {\r\n                        setMediaPlayer(\"0\", fileDescriptor);\r\n                    } else {\r\n                        binding.progressBar.setVisibility(View.GONE);\r\n                        binding.llProgressBar.setVisibility(View.GONE);\r\n                        binding.llPlay.setVisibility(View.VISIBLE);\r\n                        binding.llPause.setVisibility(View.GONE);\r\n                        BWSApplication.showToast(getString(R.string.no_server_found), ctx);\r\n                    }\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            if (BWSApplication.isNetworkConnected(ctx)) {\r\n                binding.llProgressBar.setVisibility(View.VISIBLE);\r\n                binding.progressBar.setVisibility(View.VISIBLE);\r\n                binding.llPlay.setVisibility(View.GONE);\r\n                binding.llPause.setVisibility(View.GONE);\r\n                setMediaPlayer(\"0\", fileDescriptor);\r\n            } else {\r\n                binding.progressBar.setVisibility(View.GONE);\r\n                binding.llProgressBar.setVisibility(View.GONE);\r\n                binding.llPlay.setVisibility(View.VISIBLE);\r\n                binding.llPause.setVisibility(View.GONE);\r\n                BWSApplication.showToast(getString(R.string.no_server_found), ctx);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void callComplete() {\r\n        handler.removeCallbacks(UpdateSongTime);\r\n        isPrepare = false;\r\n        isMediaStart = false;\r\n        isPause = false;\r\n        if (IsRepeat.equalsIgnoreCase(\"1\")) {\r\n            if (position < (listSize - 1)) {\r\n                position = position + 1;\r\n            } else {\r\n                position = 0;\r\n            }\r\n            getPrepareShowData(position);\r\n        } else if (IsRepeat.equalsIgnoreCase(\"0\")) {\r\n            getPrepareShowData(position);\r\n        } else if (IsShuffle.equalsIgnoreCase(\"1\")) {\r\n            // shuffle is on - play a random song\r\n            if (queuePlay) {\r\n                adapter.callRemoveList(position);\r\n                listSize = addToQueueModelList.size();\r\n                if (listSize == 0) {\r\n                    stopMedia();\r\n                } else if (listSize == 1) {\r\n                    position = 0;\r\n                    getPrepareShowData(position);\r\n                } else {\r\n                    Random random = new Random();\r\n                    position = random.nextInt((listSize - 1) - 0 + 1) + 0;\r\n                    getPrepareShowData(position);\r\n                }\r\n            } else {\r\n                if (listSize == 1) {\r\n\r\n                } else {\r\n                    Random random = new Random();\r\n                    position = random.nextInt((listSize - 1) - 0 + 1) + 0;\r\n                    getPrepareShowData(position);\r\n                }\r\n            }\r\n        } else {\r\n            if (queuePlay) {\r\n                adapter.callRemoveList(position);\r\n                listSize = addToQueueModelList.size();\r\n                if (position < listSize - 1) {\r\n                    getPrepareShowData(position);\r\n                } else {\r\n                    if (listSize == 0) {\r\n                        stopMedia();\r\n                    } else {\r\n                        position = 0;\r\n                        getPrepareShowData(position);\r\n                    }\r\n                }\r\n            } else {\r\n                if (position < (listSize - 1)) {\r\n                    position = position + 1;\r\n                    getPrepareShowData(position);\r\n                } else {\r\n                    if (listSize == 1) {\r\n                        binding.llPlay.setVisibility(View.VISIBLE);\r\n                        binding.llPause.setVisibility(View.GONE);\r\n                        stopMedia();\r\n                    } else {\r\n                        binding.llPlay.setVisibility(View.VISIBLE);\r\n                        binding.llPause.setVisibility(View.GONE);\r\n                        stopMedia();\r\n//                        position = 0;\r\n//                        getPrepareShowData(position);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (listSize == 1) {\r\n            binding.llnext.setEnabled(false);\r\n            binding.llnext.setEnabled(false);\r\n            binding.llprev.setClickable(false);\r\n            binding.llprev.setClickable(false);\r\n            binding.ivnext.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            binding.ivprev.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            position = 0;\r\n        } /*else if (position == listSize - 1 && IsRepeat.equalsIgnoreCase(\"1\")) {\r\n                binding.llnext.setEnabled(false);\r\n                binding.llnext.setClickable(false);\r\n                binding.ivnext.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            } else if (position == 0 && IsRepeat.equalsIgnoreCase(\"1\")) {\r\n                binding.llprev.setEnabled(false);\r\n                binding.llprev.setClickable(false);\r\n                binding.ivprev.setColorFilter(ContextCompat.getColor(ctx, R.color.extra_light_blue), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            }*/ else {\r\n            binding.llnext.setEnabled(true);\r\n            binding.llnext.setEnabled(true);\r\n            binding.llprev.setClickable(true);\r\n            binding.llprev.setClickable(true);\r\n            binding.ivnext.setColorFilter(ContextCompat.getColor(ctx, R.color.white), android.graphics.PorterDuff.Mode.SRC_IN);\r\n            binding.ivprev.setColorFilter(ContextCompat.getColor(ctx, R.color.white), android.graphics.PorterDuff.Mode.SRC_IN);\r\n        }\r\n        SharedPreferences shared = getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = shared.edit();\r\n        editor.putInt(CONSTANTS.PREF_KEY_position, position);\r\n        editor.commit();\r\n    }\r\n\r\n    private void setInIt(String name, String audiomastercat, String imageFile, String audioDuration) {\r\n        binding.tvTitle.setText(name);\r\n        binding.tvName.setText(name);\r\n        binding.tvCategory.setText(audiomastercat);\r\n        Glide.with(ctx).load(imageFile).thumbnail(0.05f)\r\n                .diskCacheStrategy(DiskCacheStrategy.ALL).skipMemoryCache(false).into(binding.ivRestaurantImage);\r\n        binding.tvTime.setText(audioDuration);\r\n    }\r\n\r\n    private void addToRecentPlay() {\r\n        SharedPreferences shared1 = getSharedPreferences(CONSTANTS.PREF_KEY_LOGIN, Context.MODE_PRIVATE);\r\n        String UserID = (shared1.getString(CONSTANTS.PREF_KEY_UserID, \"\"));\r\n\r\n        if (BWSApplication.isNetworkConnected(ctx)) {\r\n            BWSApplication.showProgressBar(binding.pbProgressBar, binding.progressBarHolder, activity);\r\n            Call<SucessModel> listCall = APIClient.getClient().getRecentlyplayed(id, UserID);\r\n            listCall.enqueue(new Callback<SucessModel>() {\r\n                @Override\r\n                public void onResponse(Call<SucessModel> call, Response<SucessModel> response) {\r\n                    if (response.isSuccessful()) {\r\n                        BWSApplication.hideProgressBar(binding.pbProgressBar, binding.progressBarHolder, activity);\r\n                        SucessModel model = response.body();\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Call<SucessModel> call, Throwable t) {\r\n                    BWSApplication.hideProgressBar(binding.pbProgressBar, binding.progressBarHolder, activity);\r\n                }\r\n            });\r\n        } else {\r\n//            BWSApplication.showToast(getString(R.string.no_server_found), ctx);\r\n        }\r\n    }\r\n\r\n    private void callBack() {\r\n        handler.removeCallbacks(UpdateSongTime);\r\n        if (ComeFromQueue.equalsIgnoreCase(\"1\")) {\r\n            Intent i = new Intent(ctx, AddQueueActivity.class);\r\n            i.putExtra(\"ID\", AudioId);\r\n            i.putExtra(\"play\", play);\r\n            startActivity(i);\r\n            finish();\r\n        } else if (ComeFromQueue.equalsIgnoreCase(\"0\") ||\r\n                ComeFromQueue.equalsIgnoreCase(\"\")) {\r\n            if (binding.llPause.getVisibility() == View.VISIBLE) {\r\n                isPause = false;\r\n            }\r\n            SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = shared.edit();\r\n            Gson gson = new Gson();\r\n            String json = gson.toJson(addToQueueModelList);\r\n            editor.putString(CONSTANTS.PREF_KEY_queueList, json);\r\n            editor.putInt(CONSTANTS.PREF_KEY_position, position);\r\n            editor.commit();\r\n            Intent i = new Intent(ctx, PlayWellnessActivity.class);\r\n            i.setFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n            startActivity(i);\r\n            finish();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n   /*     if (isPrepare && !isMediaStart) {\r\n            callMedia();\r\n        } else if ((isMediaStart || isPlaying()) && !isPause) {\r\n            binding.llPlay.setVisibility(View.GONE);\r\n            binding.llPause.setVisibility(View.VISIBLE);\r\n            binding.llProgressBar.setVisibility(View.GONE);\r\n            binding.progressBar.setVisibility(View.GONE);\r\n        } else {\r\n            binding.llPlay.setVisibility(View.VISIBLE);\r\n            binding.llPause.setVisibility(View.GONE);\r\n            binding.llProgressBar.setVisibility(View.GONE);\r\n            binding.progressBar.setVisibility(View.GONE);\r\n        }*/\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        callBack();\r\n        super.onBackPressed();\r\n    }\r\n\r\n    public void updateProgressBar() {\r\n        handler.postDelayed(UpdateSongTime, 500);\r\n    }\r\n\r\n    @Override\r\n    public void onProgressChanged(SeekBar seekBar, int i, boolean b) {\r\n     /*   handler.removeCallbacks(UpdateSongTime);\r\n        if (isMediaStart) {\r\n            int totalDuration = getEndTime();\r\n            int currentPosition = progressToTimer(seekBar.getProgress(), totalDuration);\r\n\r\n            // forward or backward to certain seconds\r\n            SeekTo(currentPosition);\r\n        }\r\n        // update timer progress again\r\n        updateProgressBar();*/\r\n    }\r\n\r\n    @Override\r\n    public void onStartTrackingTouch(SeekBar seekBar) {\r\n        handler.removeCallbacks(UpdateSongTime);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onStopTrackingTouch(SeekBar seekBar) {\r\n        handler.removeCallbacks(UpdateSongTime);\r\n        int totalDuration = getEndTime();\r\n\r\n        int currentPosition = progressToTimer(seekBar.getProgress(), totalDuration);\r\n\r\n        oTime = binding.simpleSeekbar.getProgress();\r\n        // forward or backward to certain seconds\r\n        SeekTo(currentPosition);\r\n\r\n        // update timer progress again\r\n        updateProgressBar();\r\n    }\r\n\r\n    @Override\r\n    public void requestDrag(RecyclerView.ViewHolder viewHolder) {\r\n        touchHelper.startDrag(viewHolder);\r\n    }\r\n\r\n /*   @Override\r\n    public void onAudioFocusChange(int i) {\r\n        switch (i) {\r\n            case AudioManager.AUDIOFOCUS_GAIN:\r\n            case AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK:\r\n                // Resume your media player here\r\n                resumeMedia();\r\n                binding.llPlay.setVisibility(View.GONE);\r\n                binding.llPause.setVisibility(View.VISIBLE);\r\n                break;\r\n            case AudioManager.AUDIOFOCUS_LOSS:\r\n            case AudioManager.AUDIOFOCUS_LOSS_TRANSIENT:\r\n                if (isMediaStart) {\r\n                    pauseMedia();\r\n                    binding.llPlay.setVisibility(View.VISIBLE);\r\n                    binding.llPause.setVisibility(View.GONE);\r\n                }\r\n//                MusicService.pauseMedia();// Pause your media player here\r\n                break;\r\n        }\r\n    }*/\r\n\r\n    public class QueueAdapter extends RecyclerView.Adapter<QueueAdapter.MyViewHolder> implements ItemMoveCallback.ItemTouchHelperContract {\r\n        ArrayList<AddToQueueModel> listModelList;\r\n        Context ctx;\r\n        StartDragListener startDragListener;\r\n\r\n        public QueueAdapter(ArrayList<AddToQueueModel> listModelList, Context ctx, StartDragListener startDragListener) {\r\n            this.listModelList = listModelList;\r\n            this.ctx = ctx;\r\n            this.startDragListener = startDragListener;\r\n\r\n        }\r\n\r\n        @NonNull\r\n        @Override\r\n        public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n            QueueListLayoutBinding v = DataBindingUtil.inflate(LayoutInflater.from(parent.getContext())\r\n                    , R.layout.queue_list_layout, parent, false);\r\n            return new MyViewHolder(v);\r\n        }\r\n\r\n        @Override\r\n        public void onBindViewHolder(@NonNull MyViewHolder holder, int position1) {\r\n            AddToQueueModel listModel = listModelList.get(position1);\r\n\r\n            holder.binding.tvTitle.setText(listModel.getName());\r\n            holder.binding.tvTime.setText(listModel.getAudioDuration());\r\n            binding.tvCategory.setText(listModel.getAudiomastercat());\r\n\r\n            MeasureRatio measureRatio = BWSApplication.measureRatio(ctx, 0,\r\n                    1, 1, 0, 0);\r\n            holder.binding.ivRestaurantImage.getLayoutParams().height = (int) (measureRatio.getHeight() * measureRatio.getRatio());\r\n            holder.binding.ivRestaurantImage.getLayoutParams().width = (int) (measureRatio.getWidthImg() * measureRatio.getRatio());\r\n            holder.binding.ivRestaurantImage.setScaleType(ImageView.ScaleType.FIT_XY);\r\n            Glide.with(ctx).load(listModel.getImageFile()).thumbnail(0.05f)\r\n                    .diskCacheStrategy(DiskCacheStrategy.ALL).skipMemoryCache(false).into(holder.binding.ivRestaurantImage);\r\n\r\n            holder.binding.llRemove.setOnClickListener(view -> callRemoveList(position1));\r\n            holder.binding.llSort.setOnTouchListener((v, event) -> {\r\n                if (event.getAction() ==\r\n                        MotionEvent.ACTION_DOWN) {\r\n                    startDragListener.requestDrag(holder);\r\n                }\r\n                if (event.getAction() ==\r\n                        MotionEvent.ACTION_UP) {\r\n                    startDragListener.requestDrag(holder);\r\n                }\r\n                return false;\r\n            });\r\n            holder.binding.llMainLayout.setOnClickListener(view -> {\r\n                if (BWSApplication.isNetworkConnected(ctx)) {\r\n                    if (isPrepare || isMediaStart || isPause) {\r\n                        stopMedia();\r\n                    }\r\n                    isPause = false;\r\n                    isPrepare = false;\r\n                    isMediaStart = false;\r\n\r\n                    setInIt(listModel.getName(), listModel.getAudiomastercat(),\r\n                            listModel.getImageFile(), listModel.getAudioDuration());\r\n                    if (queuePlay)\r\n                        addToQueueModelList.remove(mypos);\r\n                    savePrefQueue(position1, true, false, addToQueueModelList, ctx);\r\n                    position = position1;\r\n                    getPrepareShowData(position);\r\n                    callRemoveList1(position1);\r\n                } else {\r\n                    BWSApplication.showToast(getString(R.string.no_server_found), ctx);\r\n                }\r\n            });\r\n        }\r\n\r\n        public void callRemoveList1(int position) {\r\n            listModelList.remove(position);\r\n            notifyDataSetChanged();\r\n        }\r\n\r\n        public void callRemoveList(int position1) {\r\n            for (int i = 0; i < addToQueueModelList.size(); i++) {\r\n                if (addToQueueModelList.get(i).getName().equalsIgnoreCase(binding.tvName.getText().toString()))\r\n                    addToQueueModelList.remove(i);\r\n            }\r\n            setInIt(listModelList.get(position).getName(), listModelList.get(position).getAudiomastercat(),\r\n                    listModelList.get(position).getImageFile(), listModelList.get(position).getAudioDuration());\r\n            String Name = listModelList.get(position1).getName();\r\n            listModelList.remove(position1);\r\n       /*     for (int i = 0; i < addToQueueModelList.size(); i++) {\r\n                if (addToQueueModelList.get(i).getName().equalsIgnoreCase(Name))\r\n                    addToQueueModelList.remove(i);\r\n            }*/\r\n            notifyDataSetChanged();\r\n            SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = shared.edit();\r\n            Gson gson = new Gson();\r\n            String json = gson.toJson(addToQueueModelList);\r\n            editor.putString(CONSTANTS.PREF_KEY_queueList, json);\r\n            editor.commit();\r\n            BWSApplication.showToast(\"The audio has been removed from the queue\", ctx);\r\n            addToQueueModelList2 = listModelList;\r\n        }\r\n\r\n        @Override\r\n        public int getItemCount() {\r\n            return listModelList.size();\r\n        }\r\n\r\n        @Override\r\n        public void onRowMoved(int fromPosition, int toPosition) {\r\n            if (fromPosition < toPosition) {\r\n                for (int i = fromPosition; i < toPosition; i++) {\r\n                    Collections.swap(listModelList, i, i + 1);\r\n                }\r\n            } else {\r\n                for (int i = fromPosition; i > toPosition; i--) {\r\n                    Collections.swap(listModelList, i, i - 1);\r\n                }\r\n            }\r\n            SharedPreferences shared = ctx.getSharedPreferences(CONSTANTS.PREF_KEY_AUDIO, Context.MODE_PRIVATE);\r\n            SharedPreferences.Editor editor = shared.edit();\r\n            Gson gson = new Gson();\r\n            String json = \"\";\r\n            if (queuePlay) {\r\n                ArrayList<AddToQueueModel> listModelList1 = new ArrayList<>();\r\n                listModelList1.clear();\r\n                listModelList1 = listModelList;\r\n                listModelList1.add(addToQueueModelList.get(mypos));\r\n                json = gson.toJson(listModelList1);\r\n            } else {\r\n                json = gson.toJson(listModelList);\r\n            }\r\n            editor.putString(CONSTANTS.PREF_KEY_queueList, json);\r\n            editor.commit();\r\n            addToQueueModelList2 = listModelList;\r\n            notifyItemMoved(fromPosition, toPosition);\r\n\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onRowSelected(RecyclerView.ViewHolder myViewHolder) {\r\n\r\n        }\r\n\r\n        @Override\r\n        public void onRowClear(RecyclerView.ViewHolder myViewHolder) {\r\n\r\n        }\r\n\r\n\r\n        public class MyViewHolder extends RecyclerView.ViewHolder {\r\n            QueueListLayoutBinding binding;\r\n\r\n            public MyViewHolder(QueueListLayoutBinding binding) {\r\n                super(binding.getRoot());\r\n                this.binding = binding;\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/brainwellnessspa/DashboardModule/Activities/ViewQueueActivity.java	(revision 19473a2c81925b9c61c52b0b85e465485b4c4415)
+++ app/src/main/java/com/brainwellnessspa/DashboardModule/Activities/ViewQueueActivity.java	(date 1602583198204)
@@ -209,7 +209,7 @@
         mAudioManager.requestAudioFocus(this, AudioManager.STREAM_MUSIC,
                 AudioManager.AUDIOFOCUS_GAIN);*/
         binding.rvQueueList.setFocusable(false);
-        binding.nestedScroll.requestFocus();
+//        binding.nestedScroll.requestFocus();
 
         queuePlay = shared.getBoolean(CONSTANTS.PREF_KEY_queuePlay, false);
         audioPlay = shared.getBoolean(CONSTANTS.PREF_KEY_audioPlay, true);
Index: app/src/main/res/layout/activity_view_queue.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout>\r\n\r\n    <RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n        xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/dark_blue_gray\">\r\n\r\n        <LinearLayout\r\n            android:id=\"@+id/llFirst\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginHorizontal=\"@dimen/_16sdp\"\r\n            android:layout_marginTop=\"@dimen/_16sdp\"\r\n            android:weightSum=\"1\">\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/llBack\"\r\n                android:layout_width=\"@dimen/_0sdp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"0.18\">\r\n\r\n                <ImageView\r\n                    android:layout_width=\"@dimen/_20sdp\"\r\n                    android:layout_height=\"@dimen/_20sdp\"\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:contentDescription=\"@string/close_queue\"\r\n                    android:src=\"@drawable/ic_close_white_icon\"\r\n                    app:tint=\"@color/white\" />\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"@dimen/_0sdp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"0.64\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tvCategory\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"@dimen/_6sdp\"\r\n                    android:ellipsize=\"end\"\r\n                    android:fontFamily=\"@font/montserrat_medium\"\r\n                    android:gravity=\"center\"\r\n                    android:maxLines=\"1\"\r\n                    android:textColor=\"@color/white\"\r\n                    android:textSize=\"@dimen/_13sdp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/tvTitle\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"@dimen/_6sdp\"\r\n                    android:fontFamily=\"@font/montserrat_regular\"\r\n                    android:gravity=\"center\"\r\n                    android:textColor=\"@color/white\"\r\n                    android:textSize=\"@dimen/_16sdp\" />\r\n\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"@dimen/_0sdp\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_weight=\"0.18\"\r\n                android:gravity=\"right\"\r\n                android:orientation=\"horizontal\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_above=\"@id/rlThired\"\r\n            android:layout_below=\"@id/llFirst\"\r\n            android:layout_marginVertical=\"@dimen/_10sdp\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <androidx.core.widget.NestedScrollView\r\n                android:id=\"@+id/nestedScroll\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:overScrollMode=\"never\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/_16sdp\"\r\n                        android:layout_marginTop=\"@dimen/_6sdp\"\r\n                        android:fontFamily=\"@font/montserrat_bold\"\r\n                        android:gravity=\"start\"\r\n                        android:text=\"@string/Now_Playing\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textSize=\"@dimen/_15sdp\" />\r\n\r\n                    <LinearLayout\r\n                        android:id=\"@+id/llNowPlaying\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_60sdp\"\r\n                        android:layout_marginHorizontal=\"@dimen/_16sdp\"\r\n                        android:layout_marginVertical=\"@dimen/_12sdp\"\r\n                        android:orientation=\"horizontal\"\r\n                        android:weightSum=\"1\">\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"@dimen/_0sdp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"center\"\r\n                            android:layout_weight=\"0.2\"\r\n                            android:gravity=\"center|start\">\r\n\r\n                            <androidx.cardview.widget.CardView\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_marginHorizontal=\"@dimen/_10sdp\"\r\n                                android:layout_marginVertical=\"@dimen/_2sdp\"\r\n                                app:cardCornerRadius=\"@dimen/_10sdp\">\r\n\r\n                                <androidx.constraintlayout.widget.ConstraintLayout\r\n                                    android:id=\"@+id/title_layout\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"match_parent\">\r\n\r\n                                    <ImageView\r\n                                        android:id=\"@+id/ivRestaurantImage\"\r\n                                        android:layout_width=\"match_parent\"\r\n                                        android:layout_height=\"match_parent\"\r\n                                        android:layout_marginLeft=\"-4dp\"\r\n                                        android:layout_marginRight=\"-16dp\"\r\n                                        android:scaleType=\"fitXY\" />\r\n                                </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                            </androidx.cardview.widget.CardView>\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"@dimen/_0sdp\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                            android:layout_weight=\"0.80\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tvName\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"@dimen/_6sdp\"\r\n                                android:ellipsize=\"end\"\r\n                                android:fontFamily=\"@font/montserrat_bold\"\r\n                                android:gravity=\"start\"\r\n                                android:maxLines=\"1\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/_17sdp\" />\r\n\r\n                            <TextView\r\n                                android:id=\"@+id/tvTime\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginTop=\"@dimen/_6sdp\"\r\n                                android:ellipsize=\"end\"\r\n                                android:fontFamily=\"@font/montserrat_medium\"\r\n                                android:gravity=\"start\"\r\n                                android:maxLines=\"1\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"@dimen/_13sdp\" />\r\n\r\n\r\n                        </LinearLayout>\r\n\r\n                    </LinearLayout>\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginHorizontal=\"@dimen/_16sdp\"\r\n                        android:layout_marginTop=\"@dimen/_6sdp\"\r\n                        android:fontFamily=\"@font/montserrat_bold\"\r\n                        android:gravity=\"start\"\r\n                        android:text=\"@string/Next_in_queue\"\r\n                        android:textColor=\"@color/white\"\r\n                        android:textSize=\"@dimen/_15sdp\" />\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/rvQueueList\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_marginHorizontal=\"@dimen/_12sdp\"\r\n                        android:nestedScrollingEnabled=\"true\"\r\n                        android:overScrollMode=\"never\"\r\n                        android:paddingTop=\"@dimen/_8sdp\"\r\n                        android:paddingBottom=\"@dimen/_8sdp\" />\r\n\r\n                </LinearLayout>\r\n            </androidx.core.widget.NestedScrollView>\r\n        </LinearLayout>\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/rlThired\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginBottom=\"@dimen/_26sdp\">\r\n\r\n            <SeekBar\r\n                android:id=\"@+id/simpleSeekbar\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"@dimen/_4sdp\"\r\n                android:progressDrawable=\"@drawable/seek_bar_white\"\r\n                android:thumb=\"@drawable/ic_white_dot_icon\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginHorizontal=\"@dimen/_16sdp\"\r\n                android:layout_marginTop=\"@dimen/_30sdp\"\r\n                android:weightSum=\"1\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"@dimen/_0sdp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.2\"\r\n                    android:gravity=\"center\" />\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/llprev\"\r\n                    android:layout_width=\"@dimen/_0sdp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.2\"\r\n                    android:gravity=\"center\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/ivprev\"\r\n                        android:layout_width=\"@dimen/_28sdp\"\r\n                        android:layout_height=\"@dimen/_28sdp\"\r\n                        android:src=\"@drawable/ic_backword_icon\"\r\n                        app:tint=\"@color/white\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/llPlay\"\r\n                    android:layout_width=\"@dimen/_0sdp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.2\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:visibility=\"gone\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/ivPlay\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:src=\"@drawable/ic_play_white_icon\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/llProgressBar\"\r\n                    android:layout_width=\"@dimen/_0sdp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.24\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:padding=\"@dimen/_2sdp\"\r\n                    android:visibility=\"gone\">\r\n\r\n                    <ProgressBar\r\n                        android:id=\"@+id/progressBar\"\r\n                        android:layout_width=\"0.00dp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_marginLeft=\"@dimen/_13sdp\"\r\n                        android:layout_marginTop=\"@dimen/_8sdp\"\r\n                        android:layout_marginBottom=\"@dimen/_8sdp\"\r\n                        android:layout_weight=\"0.13\"\r\n                        android:indeterminateTint=\"@color/white\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:visibility=\"gone\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/llPause\"\r\n                    android:layout_width=\"@dimen/_0sdp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.2\"\r\n                    android:gravity=\"center_horizontal\"\r\n                    android:visibility=\"gone\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/ivPause\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:src=\"@drawable/ic_pause_white_icon\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/llnext\"\r\n                    android:layout_width=\"@dimen/_0sdp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.2\"\r\n                    android:gravity=\"center\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/ivnext\"\r\n                        android:layout_width=\"@dimen/_28sdp\"\r\n                        android:layout_height=\"@dimen/_28sdp\"\r\n                        android:src=\"@drawable/ic_forward_icon\"\r\n                        app:tint=\"@color/white\" />\r\n                </LinearLayout>\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"@dimen/_0sdp\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_weight=\"0.2\"\r\n                    android:gravity=\"center\" />\r\n\r\n            </LinearLayout>\r\n        </RelativeLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:gravity=\"center\"\r\n            android:padding=\"@dimen/_60sdp\">\r\n\r\n            <ProgressBar\r\n                android:id=\"@+id/pbProgressBar\"\r\n                android:layout_width=\"@dimen/_50sdp\"\r\n                android:layout_height=\"@dimen/_50sdp\"\r\n                android:indeterminateTint=\"@color/blue\"\r\n                android:scaleType=\"centerInside\"\r\n                android:visibility=\"gone\" />\r\n\r\n        </LinearLayout>\r\n\r\n        <FrameLayout\r\n            android:id=\"@+id/progressBarHolder\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:alpha=\"0.4\"\r\n            android:animateLayoutChanges=\"true\"\r\n            android:background=\"#C0000000\"\r\n            android:visibility=\"gone\" />\r\n    </RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_view_queue.xml	(revision 19473a2c81925b9c61c52b0b85e465485b4c4415)
+++ app/src/main/res/layout/activity_view_queue.xml	(date 1602583120234)
@@ -8,316 +8,329 @@
         android:background="@color/dark_blue_gray">
 
         <LinearLayout
-            android:id="@+id/llFirst"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginHorizontal="@dimen/_16sdp"
-            android:layout_marginTop="@dimen/_16sdp"
-            android:weightSum="1">
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical"
+            android:weightSum="1">
+
+            <LinearLayout
+                android:id="@+id/llFirst"
+                android:layout_width="match_parent"
+                android:layout_height="0dp"
+                android:layout_marginHorizontal="@dimen/_16sdp"
+                android:layout_marginTop="@dimen/_16sdp"
+                android:layout_weight="0.1"
+                android:weightSum="1">
 
-            <LinearLayout
-                android:id="@+id/llBack"
-                android:layout_width="@dimen/_0sdp"
-                android:layout_height="match_parent"
-                android:layout_weight="0.18">
+                <LinearLayout
+                    android:id="@+id/llBack"
+                    android:layout_width="@dimen/_0sdp"
+                    android:layout_height="match_parent"
+                    android:layout_weight="0.18">
 
-                <ImageView
-                    android:layout_width="@dimen/_20sdp"
-                    android:layout_height="@dimen/_20sdp"
-                    android:layout_marginTop="@dimen/_10sdp"
-                    android:contentDescription="@string/close_queue"
-                    android:src="@drawable/ic_close_white_icon"
-                    app:tint="@color/white" />
-            </LinearLayout>
+                    <ImageView
+                        android:layout_width="@dimen/_20sdp"
+                        android:layout_height="@dimen/_20sdp"
+                        android:layout_marginTop="@dimen/_10sdp"
+                        android:contentDescription="@string/close_queue"
+                        android:src="@drawable/ic_close_white_icon"
+                        app:tint="@color/white" />
+                </LinearLayout>
 
-            <LinearLayout
-                android:layout_width="@dimen/_0sdp"
-                android:layout_height="match_parent"
-                android:layout_weight="0.64"
-                android:orientation="vertical">
+                <LinearLayout
+                    android:layout_width="@dimen/_0sdp"
+                    android:layout_height="match_parent"
+                    android:layout_weight="0.64"
+                    android:orientation="vertical">
 
-                <TextView
-                    android:id="@+id/tvCategory"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="@dimen/_6sdp"
-                    android:ellipsize="end"
-                    android:fontFamily="@font/montserrat_medium"
-                    android:gravity="center"
-                    android:maxLines="1"
-                    android:textColor="@color/white"
-                    android:textSize="@dimen/_13sdp" />
+                    <TextView
+                        android:id="@+id/tvCategory"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_marginTop="@dimen/_6sdp"
+                        android:ellipsize="end"
+                        android:fontFamily="@font/montserrat_medium"
+                        android:gravity="center"
+                        android:maxLines="1"
+                        android:textColor="@color/white"
+                        android:textSize="@dimen/_13sdp" />
 
-                <TextView
-                    android:id="@+id/tvTitle"
-                    android:layout_width="match_parent"
-                    android:layout_height="wrap_content"
-                    android:layout_marginTop="@dimen/_6sdp"
-                    android:fontFamily="@font/montserrat_regular"
-                    android:gravity="center"
-                    android:textColor="@color/white"
-                    android:textSize="@dimen/_16sdp" />
+                    <TextView
+                        android:id="@+id/tvTitle"
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:layout_marginTop="@dimen/_6sdp"
+                        android:fontFamily="@font/montserrat_regular"
+                        android:gravity="center"
+                        android:textColor="@color/white"
+                        android:textSize="@dimen/_16sdp" />
 
-            </LinearLayout>
+                </LinearLayout>
 
-            <LinearLayout
-                android:layout_width="@dimen/_0sdp"
-                android:layout_height="match_parent"
-                android:layout_weight="0.18"
-                android:gravity="right"
-                android:orientation="horizontal" />
+                <LinearLayout
+                    android:layout_width="@dimen/_0sdp"
+                    android:layout_height="match_parent"
+                    android:layout_weight="0.18"
+                    android:gravity="right"
+                    android:orientation="horizontal" />
 
-        </LinearLayout>
+            </LinearLayout>
 
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:layout_above="@id/rlThired"
-            android:layout_below="@id/llFirst"
-            android:layout_marginVertical="@dimen/_10sdp"
-            android:orientation="vertical">
-
-            <androidx.core.widget.NestedScrollView
-                android:id="@+id/nestedScroll"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:overScrollMode="never">
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="0dp"
+                android:layout_weight="0.74"
+                android:layout_above="@id/rlThired"
+                android:layout_below="@id/llFirst"
+                android:layout_marginVertical="@dimen/_10sdp"
+                android:orientation="vertical">
+<!--
+                <androidx.core.widget.NestedScrollView
+                    android:id="@+id/nestedScroll"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:overScrollMode="never">-->
 
-                <LinearLayout
-                    android:layout_width="match_parent"
-                    android:layout_height="match_parent"
-                    android:orientation="vertical">
+                    <LinearLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="match_parent"
+                        android:orientation="vertical">
 
-                    <TextView
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_marginHorizontal="@dimen/_16sdp"
-                        android:layout_marginTop="@dimen/_6sdp"
-                        android:fontFamily="@font/montserrat_bold"
-                        android:gravity="start"
-                        android:text="@string/Now_Playing"
-                        android:textColor="@color/white"
-                        android:textSize="@dimen/_15sdp" />
+                        <TextView
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_marginHorizontal="@dimen/_16sdp"
+                            android:layout_marginTop="@dimen/_6sdp"
+                            android:fontFamily="@font/montserrat_bold"
+                            android:gravity="start"
+                            android:text="@string/Now_Playing"
+                            android:textColor="@color/white"
+                            android:textSize="@dimen/_15sdp" />
 
-                    <LinearLayout
-                        android:id="@+id/llNowPlaying"
-                        android:layout_width="match_parent"
-                        android:layout_height="@dimen/_60sdp"
-                        android:layout_marginHorizontal="@dimen/_16sdp"
-                        android:layout_marginVertical="@dimen/_12sdp"
-                        android:orientation="horizontal"
-                        android:weightSum="1">
+                        <LinearLayout
+                            android:id="@+id/llNowPlaying"
+                            android:layout_width="match_parent"
+                            android:layout_height="@dimen/_60sdp"
+                            android:layout_marginHorizontal="@dimen/_16sdp"
+                            android:layout_marginVertical="@dimen/_12sdp"
+                            android:orientation="horizontal"
+                            android:weightSum="1">
 
-                        <LinearLayout
-                            android:layout_width="@dimen/_0sdp"
-                            android:layout_height="wrap_content"
-                            android:layout_gravity="center"
-                            android:layout_weight="0.2"
-                            android:gravity="center|start">
+                            <LinearLayout
+                                android:layout_width="@dimen/_0sdp"
+                                android:layout_height="wrap_content"
+                                android:layout_gravity="center"
+                                android:layout_weight="0.2"
+                                android:gravity="center|start">
 
-                            <androidx.cardview.widget.CardView
-                                android:layout_width="match_parent"
-                                android:layout_height="match_parent"
-                                android:layout_marginHorizontal="@dimen/_10sdp"
-                                android:layout_marginVertical="@dimen/_2sdp"
-                                app:cardCornerRadius="@dimen/_10sdp">
+                                <androidx.cardview.widget.CardView
+                                    android:layout_width="match_parent"
+                                    android:layout_height="match_parent"
+                                    android:layout_marginHorizontal="@dimen/_10sdp"
+                                    android:layout_marginVertical="@dimen/_2sdp"
+                                    app:cardCornerRadius="@dimen/_10sdp">
 
-                                <androidx.constraintlayout.widget.ConstraintLayout
-                                    android:id="@+id/title_layout"
-                                    android:layout_width="match_parent"
-                                    android:layout_height="match_parent">
+                                    <androidx.constraintlayout.widget.ConstraintLayout
+                                        android:id="@+id/title_layout"
+                                        android:layout_width="match_parent"
+                                        android:layout_height="match_parent">
 
-                                    <ImageView
-                                        android:id="@+id/ivRestaurantImage"
-                                        android:layout_width="match_parent"
-                                        android:layout_height="match_parent"
-                                        android:layout_marginLeft="-4dp"
-                                        android:layout_marginRight="-16dp"
-                                        android:scaleType="fitXY" />
-                                </androidx.constraintlayout.widget.ConstraintLayout>
+                                        <ImageView
+                                            android:id="@+id/ivRestaurantImage"
+                                            android:layout_width="match_parent"
+                                            android:layout_height="match_parent"
+                                            android:layout_marginLeft="-4dp"
+                                            android:layout_marginRight="-16dp"
+                                            android:scaleType="fitXY" />
+                                    </androidx.constraintlayout.widget.ConstraintLayout>
 
-                            </androidx.cardview.widget.CardView>
-                        </LinearLayout>
+                                </androidx.cardview.widget.CardView>
+                            </LinearLayout>
 
-                        <LinearLayout
-                            android:layout_width="@dimen/_0sdp"
-                            android:layout_height="wrap_content"
-                            android:layout_marginLeft="@dimen/_10sdp"
-                            android:layout_weight="0.80"
-                            android:orientation="vertical">
+                            <LinearLayout
+                                android:layout_width="@dimen/_0sdp"
+                                android:layout_height="wrap_content"
+                                android:layout_marginLeft="@dimen/_10sdp"
+                                android:layout_weight="0.80"
+                                android:orientation="vertical">
 
-                            <TextView
-                                android:id="@+id/tvName"
-                                android:layout_width="match_parent"
-                                android:layout_height="wrap_content"
-                                android:layout_marginTop="@dimen/_6sdp"
-                                android:ellipsize="end"
-                                android:fontFamily="@font/montserrat_bold"
-                                android:gravity="start"
-                                android:maxLines="1"
-                                android:textColor="@color/white"
-                                android:textSize="@dimen/_17sdp" />
+                                <TextView
+                                    android:id="@+id/tvName"
+                                    android:layout_width="match_parent"
+                                    android:layout_height="wrap_content"
+                                    android:layout_marginTop="@dimen/_6sdp"
+                                    android:ellipsize="end"
+                                    android:fontFamily="@font/montserrat_bold"
+                                    android:gravity="start"
+                                    android:maxLines="1"
+                                    android:textColor="@color/white"
+                                    android:textSize="@dimen/_17sdp" />
 
-                            <TextView
-                                android:id="@+id/tvTime"
-                                android:layout_width="match_parent"
-                                android:layout_height="wrap_content"
-                                android:layout_marginTop="@dimen/_6sdp"
-                                android:ellipsize="end"
-                                android:fontFamily="@font/montserrat_medium"
-                                android:gravity="start"
-                                android:maxLines="1"
-                                android:textColor="@color/white"
-                                android:textSize="@dimen/_13sdp" />
+                                <TextView
+                                    android:id="@+id/tvTime"
+                                    android:layout_width="match_parent"
+                                    android:layout_height="wrap_content"
+                                    android:layout_marginTop="@dimen/_6sdp"
+                                    android:ellipsize="end"
+                                    android:fontFamily="@font/montserrat_medium"
+                                    android:gravity="start"
+                                    android:maxLines="1"
+                                    android:textColor="@color/white"
+                                    android:textSize="@dimen/_13sdp" />
 
 
-                        </LinearLayout>
+                            </LinearLayout>
 
-                    </LinearLayout>
+                        </LinearLayout>
 
-                    <TextView
-                        android:layout_width="match_parent"
-                        android:layout_height="wrap_content"
-                        android:layout_marginHorizontal="@dimen/_16sdp"
-                        android:layout_marginTop="@dimen/_6sdp"
-                        android:fontFamily="@font/montserrat_bold"
-                        android:gravity="start"
-                        android:text="@string/Next_in_queue"
-                        android:textColor="@color/white"
-                        android:textSize="@dimen/_15sdp" />
+                        <TextView
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:layout_marginHorizontal="@dimen/_16sdp"
+                            android:layout_marginTop="@dimen/_6sdp"
+                            android:fontFamily="@font/montserrat_bold"
+                            android:gravity="start"
+                            android:text="@string/Next_in_queue"
+                            android:textColor="@color/white"
+                            android:textSize="@dimen/_15sdp" />
 
-                    <androidx.recyclerview.widget.RecyclerView
-                        android:id="@+id/rvQueueList"
-                        android:layout_width="match_parent"
-                        android:layout_height="match_parent"
-                        android:layout_marginHorizontal="@dimen/_12sdp"
-                        android:nestedScrollingEnabled="true"
-                        android:overScrollMode="never"
-                        android:paddingTop="@dimen/_8sdp"
-                        android:paddingBottom="@dimen/_8sdp" />
+                        <androidx.recyclerview.widget.RecyclerView
+                            android:id="@+id/rvQueueList"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:layout_marginHorizontal="@dimen/_12sdp"
+                            android:nestedScrollingEnabled="true"
+                            android:overScrollMode="never"
+                            android:paddingTop="@dimen/_8sdp"
+                            android:paddingBottom="@dimen/_8sdp" />
 
-                </LinearLayout>
-            </androidx.core.widget.NestedScrollView>
-        </LinearLayout>
+                    </LinearLayout>
+<!--                </androidx.core.widget.NestedScrollView>-->
+            </LinearLayout>
 
-        <RelativeLayout
-            android:id="@+id/rlThired"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_alignParentBottom="true"
-            android:layout_marginBottom="@dimen/_26sdp">
+            <RelativeLayout
+                android:id="@+id/rlThired"
+                android:layout_width="match_parent"
+                android:layout_height="0dp"
+                android:layout_weight="0.16"
+                android:layout_alignParentBottom="true"
+                android:layout_marginBottom="@dimen/_26sdp">
 
-            <SeekBar
-                android:id="@+id/simpleSeekbar"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginHorizontal="@dimen/_4sdp"
-                android:progressDrawable="@drawable/seek_bar_white"
-                android:thumb="@drawable/ic_white_dot_icon" />
+                <SeekBar
+                    android:id="@+id/simpleSeekbar"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginHorizontal="@dimen/_4sdp"
+                    android:progressDrawable="@drawable/seek_bar_white"
+                    android:thumb="@drawable/ic_white_dot_icon" />
 
-            <LinearLayout
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_marginHorizontal="@dimen/_16sdp"
-                android:layout_marginTop="@dimen/_30sdp"
-                android:weightSum="1">
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_marginHorizontal="@dimen/_16sdp"
+                    android:layout_marginTop="@dimen/_30sdp"
+                    android:weightSum="1">
 
-                <LinearLayout
-                    android:layout_width="@dimen/_0sdp"
-                    android:layout_height="match_parent"
-                    android:layout_weight="0.2"
-                    android:gravity="center" />
+                    <LinearLayout
+                        android:layout_width="@dimen/_0sdp"
+                        android:layout_height="match_parent"
+                        android:layout_weight="0.2"
+                        android:gravity="center" />
 
-                <LinearLayout
-                    android:id="@+id/llprev"
-                    android:layout_width="@dimen/_0sdp"
-                    android:layout_height="match_parent"
-                    android:layout_weight="0.2"
-                    android:gravity="center">
+                    <LinearLayout
+                        android:id="@+id/llprev"
+                        android:layout_width="@dimen/_0sdp"
+                        android:layout_height="match_parent"
+                        android:layout_weight="0.2"
+                        android:gravity="center">
 
-                    <ImageView
-                        android:id="@+id/ivprev"
-                        android:layout_width="@dimen/_28sdp"
-                        android:layout_height="@dimen/_28sdp"
-                        android:src="@drawable/ic_backword_icon"
-                        app:tint="@color/white" />
-                </LinearLayout>
+                        <ImageView
+                            android:id="@+id/ivprev"
+                            android:layout_width="@dimen/_28sdp"
+                            android:layout_height="@dimen/_28sdp"
+                            android:src="@drawable/ic_backword_icon"
+                            app:tint="@color/white" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:id="@+id/llPlay"
-                    android:layout_width="@dimen/_0sdp"
-                    android:layout_height="match_parent"
-                    android:layout_weight="0.2"
-                    android:gravity="center_horizontal"
-                    android:visibility="gone">
+                    <LinearLayout
+                        android:id="@+id/llPlay"
+                        android:layout_width="@dimen/_0sdp"
+                        android:layout_height="match_parent"
+                        android:layout_weight="0.2"
+                        android:gravity="center_horizontal"
+                        android:visibility="gone">
 
-                    <ImageView
-                        android:id="@+id/ivPlay"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:src="@drawable/ic_play_white_icon" />
-                </LinearLayout>
+                        <ImageView
+                            android:id="@+id/ivPlay"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:src="@drawable/ic_play_white_icon" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:id="@+id/llProgressBar"
-                    android:layout_width="@dimen/_0sdp"
-                    android:layout_height="match_parent"
-                    android:layout_weight="0.24"
-                    android:gravity="center_horizontal"
-                    android:padding="@dimen/_2sdp"
-                    android:visibility="gone">
+                    <LinearLayout
+                        android:id="@+id/llProgressBar"
+                        android:layout_width="@dimen/_0sdp"
+                        android:layout_height="match_parent"
+                        android:layout_weight="0.24"
+                        android:gravity="center_horizontal"
+                        android:padding="@dimen/_2sdp"
+                        android:visibility="gone">
 
-                    <ProgressBar
-                        android:id="@+id/progressBar"
-                        android:layout_width="0.00dp"
-                        android:layout_height="match_parent"
-                        android:layout_marginLeft="@dimen/_13sdp"
-                        android:layout_marginTop="@dimen/_8sdp"
-                        android:layout_marginBottom="@dimen/_8sdp"
-                        android:layout_weight="0.13"
-                        android:indeterminateTint="@color/white"
-                        android:scaleType="fitXY"
-                        android:visibility="gone" />
-                </LinearLayout>
+                        <ProgressBar
+                            android:id="@+id/progressBar"
+                            android:layout_width="0.00dp"
+                            android:layout_height="match_parent"
+                            android:layout_marginLeft="@dimen/_13sdp"
+                            android:layout_marginTop="@dimen/_8sdp"
+                            android:layout_marginBottom="@dimen/_8sdp"
+                            android:layout_weight="0.13"
+                            android:indeterminateTint="@color/white"
+                            android:scaleType="fitXY"
+                            android:visibility="gone" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:id="@+id/llPause"
-                    android:layout_width="@dimen/_0sdp"
-                    android:layout_height="match_parent"
-                    android:layout_weight="0.2"
-                    android:gravity="center_horizontal"
-                    android:visibility="gone">
+                    <LinearLayout
+                        android:id="@+id/llPause"
+                        android:layout_width="@dimen/_0sdp"
+                        android:layout_height="match_parent"
+                        android:layout_weight="0.2"
+                        android:gravity="center_horizontal"
+                        android:visibility="gone">
 
-                    <ImageView
-                        android:id="@+id/ivPause"
-                        android:layout_width="wrap_content"
-                        android:layout_height="wrap_content"
-                        android:src="@drawable/ic_pause_white_icon" />
-                </LinearLayout>
+                        <ImageView
+                            android:id="@+id/ivPause"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:src="@drawable/ic_pause_white_icon" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:id="@+id/llnext"
-                    android:layout_width="@dimen/_0sdp"
-                    android:layout_height="match_parent"
-                    android:layout_weight="0.2"
-                    android:gravity="center">
+                    <LinearLayout
+                        android:id="@+id/llnext"
+                        android:layout_width="@dimen/_0sdp"
+                        android:layout_height="match_parent"
+                        android:layout_weight="0.2"
+                        android:gravity="center">
 
-                    <ImageView
-                        android:id="@+id/ivnext"
-                        android:layout_width="@dimen/_28sdp"
-                        android:layout_height="@dimen/_28sdp"
-                        android:src="@drawable/ic_forward_icon"
-                        app:tint="@color/white" />
-                </LinearLayout>
+                        <ImageView
+                            android:id="@+id/ivnext"
+                            android:layout_width="@dimen/_28sdp"
+                            android:layout_height="@dimen/_28sdp"
+                            android:src="@drawable/ic_forward_icon"
+                            app:tint="@color/white" />
+                    </LinearLayout>
 
-                <LinearLayout
-                    android:layout_width="@dimen/_0sdp"
-                    android:layout_height="match_parent"
-                    android:layout_weight="0.2"
-                    android:gravity="center" />
+                    <LinearLayout
+                        android:layout_width="@dimen/_0sdp"
+                        android:layout_height="match_parent"
+                        android:layout_weight="0.2"
+                        android:gravity="center" />
 
-            </LinearLayout>
-        </RelativeLayout>
+                </LinearLayout>
+            </RelativeLayout>
+        </LinearLayout>
+
+
+
 
         <LinearLayout
             android:layout_width="match_parent"
